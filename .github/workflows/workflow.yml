name: python-deployment
run-name: ${{ github.actor }} - ${{ github.ref_name }}

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  PYTHON_VERSION: 3.8
  DOCKER_IMAGE_NAME: kube2py


jobs:
  python-ci:
    name: Python CI
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./src
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v5
      name: Setup Python ${{ env.PYTHON_VERSION }}
      with:
        python-version: '${{ env.PYTHON_VERSION }}'


    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest pytest-cov
        python -m pip install -r requirements.txt

    - name: Lint
      run: |
        cd ../
        flake8 . --show-source --statistics

    - name: Check Complexity
      run: |
        cd ../
        flake8 . --statistics --max-complexity=10 --exit-zero


    - name: Run unit test with pytest
      run: |
        pytest -v --cov=. --cov-report=term-missing --cov-report=json


    - name: Uploud python artifacts
      if: github.ref_name == 'main'
      uses: actions/upload-artifact@v4
      with:
        name: python-artifacts
        path: .

    - name: Upload helm artifacts
      if: github.ref_name == 'main'
      uses: actions/upload-artifact@v4
      with:
        name: helm-artifacts
        path: ${{ github.workspace }}/helm-charts

  buid-image:
    name: Build Push Image
    needs: ['python-ci']
    if: github.ref_name == 'main'
    runs-on: ubuntu-latest

    steps:
    - uses: actions/download-artifact@v4
      with:
        name: python-artifacts
        path: .

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUBNAME }}
        password: ${{ secrets.DOCKERHUBTOKEN }}

    - name: Build and push
      uses: docker/build-push-action@v5
      with:
        push: true
        context: ./src
        tags: ${{ secrets.DOCKERHUBNAME }}/${{ env.DOCKER_IMAGE_NAME }}:${{ github.sha }}

  helm-ci:
    runs-on: ubuntu-latest
    needs: python-ci
    if: github.ref_name == 'main'
    name: Helm CI

    steps:

    - uses: actions/download-artifact@v4
      with:
        name: helm-artifacts
        path: .

    - name: Set up Helm
      uses: azure/setup-helm@v4.2.0

    - name: Lint helm
      run: helm lint ./helm-charts/kube2py/

    - name: Template helm
      run: helm template kube2py ./helm-charts/kube2py/ -f ./helm-charts/kube2py/values.yaml

    - name: Package Helm
      run: helm package ./helm-charts/kube2py/

    - name: Upload Helm Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: helm-package
        path: ./*.tgz